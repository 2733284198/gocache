// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import codec "github.com/eko/gache/codec"
import mock "github.com/stretchr/testify/mock"

// SetterCacheInterface is an autogenerated mock type for the SetterCacheInterface type
type SetterCacheInterface struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *SetterCacheInterface) Get(key interface{}) (interface{}, error) {
	ret := _m.Called(key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(interface{}) interface{}); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetCodec provides a mock function with given fields:
func (_m *SetterCacheInterface) GetCodec() codec.CodecInterface {
	ret := _m.Called()

	var r0 codec.CodecInterface
	if rf, ok := ret.Get(0).(func() codec.CodecInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(codec.CodecInterface)
		}
	}

	return r0
}

// GetType provides a mock function with given fields:
func (_m *SetterCacheInterface) GetType() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Set provides a mock function with given fields: key, object
func (_m *SetterCacheInterface) Set(key interface{}, object interface{}) error {
	ret := _m.Called(key, object)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}, interface{}) error); ok {
		r0 = rf(key, object)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
